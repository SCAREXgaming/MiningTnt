buildscript {
    repositories {
        jcenter()
        mavenCentral()
        mavenLocal()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT'
        classpath 'co.riiid:gradle-github-plugin:0.4.2'
    }
}

plugins {
    id "fr.scarex.fcgp" version "1.0.4"
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'maven-publish'
apply plugin: 'co.riiid.gradle'

// Getting build number with git
ext.buildnumber = 0
try {
    ext.buildnumber = "git rev-list --count HEAD".execute().text.trim()
    if (ext.buildnumber.length() == 0) {
        ext.buildnumber = 0
    }
} catch (all) {}


version = "${mc_version}-${mod_version}.${buildnumber}"
group = "com.github.SCAREXgaming"
archivesBaseName = "MiningTnt"

minecraft {
    version = "${mc_version}-${forge_version}"
    runDir = "run"
    mappings = mappings_version
    
    project.ext.getProperties().each { k, v ->
        replace "@${k.toUpperCase()}@", v
    }

    replaceIn "MiningTnt.java"
}

jar.manifest {
    attributes 'FMLAT': 'MiningTnt_at.cfg'
}

repositories {
    maven {
        name "progwml6"
        url "http://dvs1.progwml6.com/files/maven"
    }
}

dependencies {
    compile "mezz.jei:jei_${mc_version}:${jei_version}"
}

processResources
{
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

// Artifacts
task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'dev'
}

artifacts {
    archives deobfJar
    archives sourceJar
    archives jar
}
tasks.assemble.dependsOn('deobfJar', 'sourceJar')


// Maven publishing
publishing {
    publications {
        universal(MavenPublication) {
            from components.java
            artifact deobfJar
            artifact sourceJar
        }
    }
}


if (file('private.properties').exists()) {
    // Config
    ext.privateConfigFile = file 'private.properties'

    privateConfigFile.withReader {
        def p = new Properties()
        p.load(it)
        project.ext.privateConfig = new ConfigSlurper().parse p
    }
    
    if (System.getenv("JITPACK") != "true") {
        forgeChangelog {
            destination = file("${privateConfig.changelog_location}/changelog-${archivesBaseName}.json")
            homepage = "http://github.com/SCAREXgaming/${archivesBaseName}/releases"
        }
    }
    
    minecraft {
        clientRunArgs += "--username=${privateConfig.mc_username}"
        clientRunArgs += "--password=${privateConfig.mc_password}"
    }


    // Github release
    github {
        owner = 'SCAREXgaming'
        repo = 'MiningTnt'
        token = privateConfig.github_token
        tagName = version
        name = version
        assets = [
            "build/libs/${archivesBaseName}-${version}-sources.jar",
            "build/libs/${archivesBaseName}-${version}-dev.jar",
            "build/libs/${archivesBaseName}-${version}.jar"
        ]
    }

    createForgeChangelog.doFirst {
        try {
            "git pull --tags".execute().waitFor()
        } catch (all) {}
    }
}
